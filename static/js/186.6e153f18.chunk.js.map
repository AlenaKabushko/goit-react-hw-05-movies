{"version":3,"file":"static/js/186.6e153f18.chunk.js","mappings":"mTAEMA,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAY,mCAAG,WAAMC,GAAN,uFACHF,EAAAA,GAAAA,IAAA,oBAA+B,CACpDG,OAAQ,CACNC,QAASL,EACTG,KAAMA,KAJgB,cACpBG,EADoB,yBAOnBA,EAASC,MAPU,2CAAH,sDAUZC,EAAmB,mCAAG,WAAMC,GAAN,uFACVR,EAAAA,GAAAA,IAAA,iBAAoBQ,GAAW,CACpDL,OAAQ,CACNC,QAASL,KAHoB,cAC3BM,EAD2B,yBAM1BA,EAASC,MANiB,2CAAH,sDASnBG,EAAa,mCAAG,WAAMD,GAAN,uFACJR,EAAAA,GAAAA,IAAA,iBAAoBQ,EAApB,YAAuC,CAC5DL,OAAQ,CACNC,QAASL,KAHc,cACrBM,EADqB,yBAMpBA,EAASC,MANW,2CAAH,sDASbI,EAAc,mCAAG,WAAMF,GAAN,uFACLR,EAAAA,GAAAA,IAAA,iBAAoBQ,EAApB,YAAuC,CAC5DL,OAAQ,CACNC,QAASL,KAHe,cACtBM,EADsB,yBAMrBA,EAASC,MANY,2CAAH,sDASdK,EAAa,mCAAG,WAAOC,EAAMV,GAAb,uFACJF,EAAAA,GAAAA,IAAA,gBAA2B,CAChDG,OAAQ,CACNC,QAASL,EACTc,MAAOD,EACPV,KAAMA,KALiB,cACrBG,EADqB,yBAQpBA,EAASC,MARW,2CAAH,uD,qGCI1B,UAxCA,WACE,IAAQQ,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAkBA,IAhBAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,QAAAA,MAAc,YAEdV,EAAAA,EAAAA,IAAeI,GACZO,MAAK,SAAAhB,GACJa,EAAWb,EACZ,IACAiB,OAAM,SAAAC,GAAK,OACVC,EAAAA,OAAAA,QACE,+CACAD,EAAME,SAHE,IAMXC,QAAQN,EAAAA,QAAAA,SACZ,GAAE,CAACN,IAECG,EAEL,OACE,wBAC8B,IAA3BA,EAAQU,QAAQC,QACf,mDAEAX,EAAQU,QAAQE,KAAI,YAAsC,IAAnCf,EAAkC,EAAlCA,GAAIgB,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,eAClC,OACE,2BACE,qCAAaA,EAAeC,aAC5B,uBAAIF,MAFGhB,EAKZ,KAIR,C","sources":["components/Request/Request.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'd190318c945ae54e51173d6269b7c5f1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const RequestTrend = async page => {\n  const response = await axios.get(`/trending/all/day`, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n    },\n  });\n  return response.data;\n};\n\nexport const RequestMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const RequestActres = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const RequestReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const RequestSearch = async (text, page) => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: text,\n      page: page,\n    },\n  });\n  return response.data;\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { RequestReviews } from '../Request/Request';\nimport { Notify } from 'notiflix';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nfunction Reviews() {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    Loading.pulse('Loading');\n\n    RequestReviews(id)\n      .then(response => {\n        setReviews(response);\n      })\n      .catch(error =>\n        Notify.failure(\n          'Ooops, something broke. Try again please... ',\n          error.messages\n        )\n      )\n      .finally(Loading.remove());\n  }, [id]);\n\n  if (!reviews) return;\n\n  return (\n    <ul>\n      {reviews.results.length === 0 ? (\n        <p>Reviews is absent today</p>\n      ) : (\n        reviews.results.map(({ id, content, author_details }) => {\n          return (\n            <li key={id}>\n              <h3>Author: {author_details.username}</h3>\n              <p>{content}</p>\n            </li>\n          );\n        })\n      )}\n    </ul>\n  );\n}\n\nexport default Reviews;\n"],"names":["API_KEY","axios","RequestTrend","page","params","api_key","response","data","RequestMovieDetails","movieId","RequestActres","RequestReviews","RequestSearch","text","query","id","useParams","useState","reviews","setReviews","useEffect","Loading","then","catch","error","Notify","messages","finally","results","length","map","content","author_details","username"],"sourceRoot":""}