{"version":3,"file":"static/js/528.940efc82.chunk.js","mappings":"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","sources":["components/Box.jsx","components/TrendItem/TrendItem.styled.js","components/TrendItem/TrendItem.jsx","components/TrendList/TrendList.styled.js","components/TrendList/TrendList.jsx","components/Pagination/Pagination.jsx","components/Request/Request.jsx","components/SearchDetails/SearchDetails.jsx","components/Search/Form.styled.js","components/Search/Search.jsx","pages/MoviesPages.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  flexbox,\n  background,\n  border,\n  color,\n  grid,\n  layout,\n  shadow,\n  space,\n  typography,\n} from 'styled-system';\n\nconst Box = styled('div')(\n  {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  flexbox,\n  background,\n  border,\n  color,\n  grid,\n  layout,\n  shadow,\n  space,\n  typography\n);\n\nexport default Box;\n","import styled from 'styled-components';\n\nexport const ItemStyle = styled.li`\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-end;\njustify-content: flex-end;\nwidth: 300px;\nheight: 500px;\n`\n\nexport const TitleStyle = styled.p`\ncolor: ${p => p.theme.color.main};\nfont-size: ${p => p.theme.fontSizes.s}px;\ntext-decoration: none\n`","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MdOutlineNoPhotography } from 'react-icons/md';\nimport { ItemStyle, TitleStyle } from './TrendItem.styled';\n\nfunction TrendItem({ movie }) {\n  const location = useLocation();\n\n  const { id, title, name, poster_path } = movie;\n\n  return (\n    <Link to={`/movies/${id}`} state={{ from: location }}>\n      <ItemStyle>\n        {poster_path ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n            alt={title ?? name}\n          />\n        ) : (\n          <div>\n            <MdOutlineNoPhotography size={250} />\n          </div>\n        )}\n        <TitleStyle>{title ?? name}</TitleStyle>\n      </ItemStyle>\n    </Link>\n  );\n}\n\nexport default TrendItem;\n\nTrendItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    poster_path: PropTypes.string,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: center;\ngap: ${p => p.theme.spase[5]}px;\nlist-style: none;\n`;","import PropTypes from 'prop-types';\nimport TrendItem from 'components/TrendItem/TrendItem';\nimport { List } from './TrendList.styled';\n\nfunction TrendList({ movies }) {\n  return (\n    <List>\n      {movies.length === 0 ? (\n        <p>\n          Ooops, we didn't find the movie. Try changing the name and we'll try\n          again.\n        </p>\n      ) : (\n        movies.map(movie => <TrendItem key={movie.id} movie={movie} />)\n      )}\n    </List>\n  );\n}\n\nexport default TrendList;\n\nTrendList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n    })\n  ),\n};\n","import TrendList from 'components/TrendList/TrendList';\nimport ReactPaginate from 'react-paginate';\n\nfunction PaginatedItems({ itemsPerPage, movies, allPage, onLoadMore }) {\n  const itemOffset = 0;\n\n  const endOffset = itemOffset + itemsPerPage;\n  const currentItems = movies.slice(itemOffset, endOffset);\n  const pageCount = allPage;\n\n  return (\n    <>\n      <TrendList movies={currentItems} />\n      <div className=\"paginate\">\n        <ReactPaginate\n          breakLabel=\"...\"\n          nextLabel=\"next >\"\n          onPageChange={onLoadMore}\n          pageRangeDisplayed={5}\n          pageCount={pageCount}\n          previousLabel=\"< previous\"\n          renderOnZeroPageCount={null}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default PaginatedItems;\n","import axios from 'axios';\n\nconst API_KEY = 'd190318c945ae54e51173d6269b7c5f1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const RequestTrend = async page => {\n  const response = await axios.get(`/trending/all/day`, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n    },\n  });\n  return response.data;\n};\n\nexport const RequestMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const RequestActres = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const RequestReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const RequestSearch = async (text, page) => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: text,\n      page: page,\n    },\n  });\n  return response.data;\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { RequestSearch } from '../Request/Request';\nimport PaginatedItems from '../Pagination/Pagination';\nimport { Notify } from 'notiflix';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nfunction SearchDetails({ query }) {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(0);\n\n  useEffect(() => {\n    if (!query) return;\n    Loading.pulse('Loading');\n\n    RequestSearch(query, page)\n      .then(response => {\n        setMovies(response.results);\n        setTotalPage(response.total_pages);\n      })\n      .catch(error =>\n        Notify.failure(\n          'Ooops, something broke. Try again please... ',\n          error.messages\n        )\n      )\n      .finally(Loading.remove());\n  }, [page, query]);\n\n  const onLoadMore = e => {\n    return setPage(e.selected + 1);\n  };\n\n  if (!movies) return;\n\n  return (\n    <>\n      <PaginatedItems\n        itemsPerPage={20}\n        movies={movies}\n        allPage={totalPage}\n        currentPage={page}\n        onLoadMore={onLoadMore}\n      />\n    </>\n  );\n}\n\nexport default SearchDetails;\n\nSearchDetails.propTypes = {\n  query: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormStyle = styled(Form)`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin: 20px;\n`\n\nexport const FieldStyle = styled(Field)`\npadding: 15px;\nmargin-right: 20px;\nwidth: 400px;\nfont-size: ${p => p.theme.fontSizes.m}px;\nborder: 1px solid ${p => p.theme.color.hover};\nbackground-color: ${p => p.theme.color.bg};\n`","import Box from '../Box';\nimport SearchDetails from '../SearchDetails/SearchDetails';\nimport { Formik } from 'formik';\nimport { useSearchParams } from 'react-router-dom';\nimport { FormStyle, FieldStyle } from './Form.styled';\nimport { BsSearch } from 'react-icons/bs';\n\nfunction Search() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = values => {\n    const { input } = values;\n    setSearchParams({ query: input });\n  };\n\n  return (\n    <Box bg=\"#ffe4e4\" flexDirection=\"column\">\n      <div>\n        <Formik initialValues={{ input: query }} onSubmit={handleSubmit}>\n          <FormStyle>\n            <FieldStyle\n              name=\"input\"\n              type=\"text\"\n              autoComplete=\"on\"\n              autoFocus\n              placeholder=\"Search movie\"\n            ></FieldStyle>\n            <button type=\"submit\">\n              <BsSearch size={20} />\n            </button>\n          </FormStyle>\n        </Formik>\n      </div>\n      {query && <SearchDetails query={query} />}\n    </Box>\n  );\n}\n\nexport default Search;\n","import Search from '../components/Search/Search';\n\nfunction MoviesPage(params) {\n  return <Search />;\n}\n\nexport default MoviesPage;\n"],"names":["Box","styled","display","justifyContent","alignItems","flexbox","background","border","color","grid","layout","shadow","space","typography","ItemStyle","TitleStyle","p","theme","main","fontSizes","s","movie","location","useLocation","id","title","name","poster_path","to","state","from","src","alt","size","List","spase","movies","length","map","itemsPerPage","allPage","onLoadMore","endOffset","currentItems","slice","pageCount","className","breakLabel","nextLabel","onPageChange","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","API_KEY","axios","RequestTrend","page","params","api_key","response","data","RequestMovieDetails","movieId","RequestActres","RequestReviews","RequestSearch","text","query","useState","setMovies","setPage","totalPage","setTotalPage","useEffect","Loading","then","results","total_pages","catch","error","Notify","messages","finally","currentPage","e","selected","FormStyle","Form","FieldStyle","Field","m","hover","bg","useSearchParams","searchParams","setSearchParams","get","flexDirection","initialValues","input","onSubmit","values","type","autoComplete","autoFocus","placeholder"],"sourceRoot":""}