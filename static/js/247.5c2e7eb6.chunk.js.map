{"version":3,"file":"static/js/247.5c2e7eb6.chunk.js","mappings":"8JAaMA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACV,CACEC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEdC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,IAGF,K,0HCgCA,UAtDA,WACE,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAkBA,IAhBAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,QAAAA,MAAc,YAEdC,EAAAA,EAAAA,IAAcP,GACXQ,MAAK,SAAAC,GACJL,EAAUK,EACX,IACAC,OAAM,SAAAC,GAAK,OACVC,EAAAA,OAAAA,QACE,+CACAD,EAAME,SAHE,IAMXC,QAAQR,EAAAA,QAAAA,SACZ,GAAE,CAACN,IAECG,EACL,OACE,SAAC,IAAD,CAAKY,SAAS,OAAd,SAC0B,IAAvBZ,EAAOa,KAAKC,QACX,kDAEAd,EAAOa,KAAKE,KAAI,SAAAC,GACd,OACE,UAAC,IAAD,CAEEC,cAAc,SACdC,GAAI,GACJC,MAAO,IACPC,OAAQ,IACRlC,eAAe,WACfmC,UAAU,SAPZ,UASGL,EAAIM,cACH,gBACEC,IAAG,yCAAoCP,EAAIM,cAC3CE,IAAKR,EAAIS,QAGX,SAAC,MAAD,CAAwBC,KAAM,MAEhC,uBAAIV,EAAIS,SAhBHT,EAAInB,GAmBd,KAIR,C,mMC1DK8B,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAY,mCAAG,WAAMC,GAAN,uFACHF,EAAAA,GAAAA,IAAA,oBAA+B,CACpDG,OAAQ,CACNC,QAASL,EACTG,KAAMA,KAJgB,cACpBxB,EADoB,yBAOnBA,EAAS2B,MAPU,2CAAH,sDAUZC,EAAmB,mCAAG,WAAMC,GAAN,uFACVP,EAAAA,GAAAA,IAAA,iBAAoBO,GAAW,CACpDJ,OAAQ,CACNC,QAASL,KAHoB,cAC3BrB,EAD2B,yBAM1BA,EAAS2B,MANiB,2CAAH,sDASnB7B,EAAa,mCAAG,WAAM+B,GAAN,uFACJP,EAAAA,GAAAA,IAAA,iBAAoBO,EAApB,YAAuC,CAC5DJ,OAAQ,CACNC,QAASL,KAHc,cACrBrB,EADqB,yBAMpBA,EAAS2B,MANW,2CAAH,sDASbG,EAAc,mCAAG,WAAMD,GAAN,uFACLP,EAAAA,GAAAA,IAAA,iBAAoBO,EAApB,YAAuC,CAC5DJ,OAAQ,CACNC,QAASL,KAHe,cACtBrB,EADsB,yBAMrBA,EAAS2B,MANY,2CAAH,sDASdI,EAAa,mCAAG,WAAOC,EAAMR,GAAb,uFACJF,EAAAA,GAAAA,IAAA,gBAA2B,CAChDG,OAAQ,CACNC,QAASL,EACTY,MAAOD,EACPR,KAAMA,KALiB,cACrBxB,EADqB,yBAQpBA,EAAS2B,MARW,2CAAH,uD","sources":["components/Box.jsx","components/Cast/Cast.jsx","components/Request/Request.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  flexbox,\n  background,\n  border,\n  color,\n  grid,\n  layout,\n  shadow,\n  space,\n  typography,\n} from 'styled-system';\n\nconst Box = styled('div')(\n  {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  flexbox,\n  background,\n  border,\n  color,\n  grid,\n  layout,\n  shadow,\n  space,\n  typography\n);\n\nexport default Box;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { RequestActres } from '../Request/Request';\nimport { MdOutlineNoPhotography } from 'react-icons/md';\nimport { Notify } from 'notiflix';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport Box from 'components/Box';\n\nfunction Cast() {\n  const { id } = useParams();\n  const [actres, setActres] = useState(null);\n\n  useEffect(() => {\n    Loading.pulse('Loading');\n\n    RequestActres(id)\n      .then(response => {\n        setActres(response);\n      })\n      .catch(error =>\n        Notify.failure(\n          'Ooops, something broke. Try again please... ',\n          error.messages\n        )\n      )\n      .finally(Loading.remove());\n  }, [id]);\n\n  if (!actres) return;\n  return (\n    <Box flexWrap=\"wrap\">\n      {actres.cast.length === 0 ? (\n        <p>Actres is absent today</p>\n      ) : (\n        actres.cast.map(act => {\n          return (\n            <Box\n              key={act.id}\n              flexDirection=\"column\"\n              mr={15}\n              width={150}\n              height={200}\n              justifyContent=\"flex-end\"\n              alignItem=\"center\"\n            >\n              {act.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w92/${act.profile_path}`}\n                  alt={act.name}\n                />\n              ) : (\n                <MdOutlineNoPhotography size={50} />\n              )}\n              <p>{act.name}</p>\n            </Box>\n          );\n        })\n      )}\n    </Box>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'd190318c945ae54e51173d6269b7c5f1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const RequestTrend = async page => {\n  const response = await axios.get(`/trending/all/day`, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n    },\n  });\n  return response.data;\n};\n\nexport const RequestMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const RequestActres = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const RequestReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const RequestSearch = async (text, page) => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: text,\n      page: page,\n    },\n  });\n  return response.data;\n};\n"],"names":["Box","styled","display","justifyContent","alignItems","flexbox","background","border","color","grid","layout","shadow","space","typography","id","useParams","useState","actres","setActres","useEffect","Loading","RequestActres","then","response","catch","error","Notify","messages","finally","flexWrap","cast","length","map","act","flexDirection","mr","width","height","alignItem","profile_path","src","alt","name","size","API_KEY","axios","RequestTrend","page","params","api_key","data","RequestMovieDetails","movieId","RequestReviews","RequestSearch","text","query"],"sourceRoot":""}